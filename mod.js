// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t,r=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,l=n.__lookupGetter__,u=n.__lookupSetter__;function c(e){return e!=e}function _(e){return Math.abs(e)}function p(e,t,r,n,o){var a,i;return c(e)||c(t)?(r[o]=NaN,r[o+n]=NaN,r):(a=_(e))<(i=_(t))?(r[o]=a,r[o+n]=i,r):(r[o]=i,r[o+n]=a,r)}function f(e,t){return p(e,t,[0,0],1,0)}t=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?r:function(e,t,r){var c,_,p,f;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((_="value"in r)&&(l.call(e,t)||u.call(e,t)?(c=e.__proto__,e.__proto__=n,delete e[t],e[t]=r.value,e.__proto__=c):e[t]=r.value),p="get"in r,f="set"in r,_&&(p||f))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&a&&a.call(e,t,r.get),f&&i&&i.call(e,t,r.set),e},t(f,"assign",{configurable:!1,enumerable:!1,writable:!1,value:p});export{p as assign,f as default};
//# sourceMappingURL=mod.js.map

{"version":3,"file":"index.mjs","sources":["../lib/minmaxabs.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum and maximum absolute values.\n*\n* @private\n* @param {(Array|TypedArray|Object)} out - output object\n* @param {number} x - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {(Array|TypedArray|Object)} minimum and maximum absolute values\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( out, 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( out, -5.9, 3.14, 4.2 );\n* // returns [ 3.14, 5.9 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( out, 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( out, +0.0, -0.0 );\n* // returns [ 0.0, 0.0 ]\n*/\nfunction minmaxabs( out, x, y ) {\n\tvar len;\n\tvar min;\n\tvar max;\n\tvar ax;\n\tvar ay;\n\tvar av;\n\tvar v;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 2 ) {\n\t\tax = abs( x );\n\t\tout[ 0 ] = ax;\n\t\tout[ 1 ] = ax;\n\t\treturn out;\n\t}\n\tif ( len === 3 ) {\n\t\tif ( isnan( x ) || isnan( y ) ) {\n\t\t\tout[ 0 ] = NaN;\n\t\t\tout[ 1 ] = NaN;\n\t\t\treturn out;\n\t\t}\n\t\tax = abs( x );\n\t\tay = abs( y );\n\t\tif ( ax < ay ) {\n\t\t\tout[ 0 ] = ax;\n\t\t\tout[ 1 ] = ay;\n\t\t\treturn out;\n\t\t}\n\t\tout[ 0 ] = ay;\n\t\tout[ 1 ] = ax;\n\t\treturn out;\n\t}\n\tmin = PINF;\n\tmax = 0.0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tv = arguments[ i ];\n\t\tif ( isnan( v ) ) {\n\t\t\tout[ 0 ] = NaN;\n\t\t\tout[ 1 ] = NaN;\n\t\t\treturn out;\n\t\t}\n\t\tav = abs( v );\n\t\tif ( av < min ) {\n\t\t\tmin = av;\n\t\t}\n\t\tif ( av > max ) {\n\t\t\tmax = av;\n\t\t}\n\t}\n\tout[ 0 ] = min;\n\tout[ 1 ] = max;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = minmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar compute = require( './minmaxabs.js' );\n\n\n// MAIN //\n\n/**\n* Returns the minimum and maximum absolute values.\n*\n* @param {(Array|TypedArray|Object)} [out] - output object\n* @param {number} x - first number\n* @param {number} [y] - second number\n* @param {...number} [args] - numbers\n* @returns {(Array|TypedArray|Object)} minimum and maximum absolute values\n*\n* @example\n* var v = minmaxabs( 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( out, -5.9, 3.14, 4.2 );\n* // returns [ 3.14, 5.9 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var v = minmaxabs( 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var v = minmaxabs( +0.0, -0.0 );\n* // returns [ 0.0, 0.0 ]\n*/\nfunction minmaxabs( out, x, y ) {\n\tvar bool;\n\tvar args;\n\tvar len;\n\tvar i;\n\n\tlen = arguments.length;\n\tif ( len === 1 ) {\n\t\treturn compute( [ 0.0, 0.0 ], out );\n\t}\n\tbool = ( typeof arguments[ 0 ] === 'number' );\n\tif ( len === 2 ) {\n\t\tif ( bool ) {\n\t\t\treturn compute( [ 0.0, 0.0 ], out, x );\n\t\t}\n\t\treturn compute( out, x );\n\t}\n\tif ( len === 3 ) {\n\t\tif ( bool ) {\n\t\t\treturn compute( [ 0.0, 0.0 ], out, x, y );\n\t\t}\n\t\treturn compute( out, x, y );\n\t}\n\tif ( bool ) {\n\t\targs = [];\n\t\targs.push( [ 0.0, 0.0 ] );\n\t\ti = 0;\n\t} else {\n\t\targs = [];\n\t\targs.push( arguments[ 0 ] );\n\t\ti = 1;\n\t}\n\tfor ( ; i < len; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn compute.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = minmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum and maximum absolute values.\n*\n* @module @stdlib/math-base-special-minmaxabs\n*\n* @example\n* var minmaxabs = require( '@stdlib/math-base-special-minmaxabs' );\n*\n* var v = minmaxabs( 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* v = minmaxabs( -5.9, 3.14, 4.2 );\n* // returns [ 3.14, 5.9 ]\n*\n* v = minmaxabs( 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* v = minmaxabs( +0.0, -0.0 );\n* // returns [ 0.0, 0.0 ]\n*\n* v = minmaxabs( 3.14 );\n* // returns [ 3.14, 3.14 ]\n*/\n\n// MODULES //\n\nvar minmaxabs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = minmaxabs;\n"],"names":["isnan","require$$0","abs","require$$1","PINF","require$$2","compute","out","x","y","len","min","max","ax","ay","av","v","i","arguments","length","NaN","lib","bool","args","push","apply"],"mappings":";;8QAsBA,IAAIA,EAAQC,EACRC,EAAMC,EACNC,EAAOC,EAiGX,ICnGIC,EDwCJ,SAAoBC,EAAKC,EAAGC,GAC3B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GAAa,KADbP,EAAMQ,UAAUC,QAKf,OAHAN,EAAKX,EAAKM,GACVD,EAAK,GAAMM,EACXN,EAAK,GAAMM,EACJN,EAER,GAAa,IAARG,EACJ,OAAKV,EAAOQ,IAAOR,EAAOS,IACzBF,EAAK,GAAMa,IACXb,EAAK,GAAMa,IACJb,IAERM,EAAKX,EAAKM,KACVM,EAAKZ,EAAKO,KAETF,EAAK,GAAMM,EACXN,EAAK,GAAMO,EACJP,IAERA,EAAK,GAAMO,EACXP,EAAK,GAAMM,EACJN,GAIR,IAFAI,EAAMP,EACNQ,EAAM,EACAK,EAAI,EAAGA,EAAIP,EAAKO,IAAM,CAE3B,GAAKjB,EADLgB,EAAIE,UAAWD,IAId,OAFAV,EAAK,GAAMa,IACXb,EAAK,GAAMa,IACJb,GAERQ,EAAKb,EAAKc,IACAL,IACTA,EAAMI,GAEFA,EAAKH,IACTA,EAAMG,GAKR,OAFAR,EAAK,GAAMI,EACXJ,EAAK,GAAMK,EACJL,GClBR,IC9CAc,EDKA,SAAoBd,EAAKC,EAAGC,GAC3B,IAAIa,EACAC,EACAb,EACAO,EAGJ,GAAa,KADbP,EAAMQ,UAAUC,QAEf,OAAOb,EAAS,CAAE,EAAK,GAAOC,GAG/B,GADAe,EAAmC,iBAAnBJ,UAAW,GACd,IAARR,EACJ,OAAKY,EACGhB,EAAS,CAAE,EAAK,GAAOC,EAAKC,GAE7BF,EAASC,EAAKC,GAEtB,GAAa,IAARE,EACJ,OAAKY,EACGhB,EAAS,CAAE,EAAK,GAAOC,EAAKC,EAAGC,GAEhCH,EAASC,EAAKC,EAAGC,GAWzB,IATKa,IACJC,EAAO,IACFC,KAAM,CAAE,EAAK,IAClBP,EAAI,KAEJM,EAAO,IACFC,KAAMN,UAAW,IACtBD,EAAI,GAEGA,EAAIP,EAAKO,IAChBM,EAAKC,KAAMN,UAAWD,IAEvB,OAAOX,EAAQmB,MAAO,KAAMF"}
{"version":3,"file":"index.mjs","sources":["../lib/assign.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport abs from '@stdlib/math-base-special-abs';\n\n\n// MAIN //\n\n/**\n* Returns the minimum and maximum absolute values.\n*\n* @private\n* @param {number} x - first number\n* @param {number} y - second number\n* @param {Collection} out - output object\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} minimum and maximum absolute values\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( 3.14, 4.2, out, 1, 0 );\n* // returns [ 3.14, 4.2 ]\n*\n* var bool = ( v === out );\n* // returns true\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( -5.9, 3.14, out, 1, 0 );\n* // returns [ 3.14, 5.9 ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( 3.14, NaN, out, 1, 0 );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var out = [ 0.0, 0.0 ];\n* var v = minmaxabs( +0.0, -0.0, out, 1, 0 );\n* // returns [ 0.0, 0.0 ]\n*/\nfunction minmaxabs( x, y, out, stride, offset ) {\n\tvar ax;\n\tvar ay;\n\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\tout[ offset ] = NaN;\n\t\tout[ offset + stride ] = NaN;\n\t\treturn out;\n\t}\n\tax = abs( x );\n\tay = abs( y );\n\tif ( ax < ay ) {\n\t\tout[ offset ] = ax;\n\t\tout[ offset + stride ] = ay;\n\t\treturn out;\n\t}\n\tout[ offset ] = ay;\n\tout[ offset + stride ] = ax;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default minmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport compute from './assign.js';\n\n\n// MAIN //\n\n/**\n* Returns the minimum and maximum absolute values.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {Array<number>} minimum and maximum absolute values\n*\n* @example\n* var v = minmaxabs( 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* @example\n* var v = minmaxabs( 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* @example\n* var v = minmaxabs( +0.0, -0.0 );\n* // returns [ 0.0, 0.0 ]\n*/\nfunction minmaxabs( x, y ) {\n\treturn compute( x, y, [ 0.0, 0.0 ], 1, 0 );\n}\n\n\n// EXPORTS //\n\nexport default minmaxabs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the minimum and maximum absolute values.\n*\n* @module @stdlib/math-base-special-minmaxabs\n*\n* @example\n* import minmaxabs from '@stdlib/math-base-special-minmaxabs';\n*\n* var v = minmaxabs( 3.14, 4.2 );\n* // returns [ 3.14, 4.2 ]\n*\n* v = minmaxabs( -5.9, 3.14 );\n* // returns [ 3.14, 5.9 ]\n*\n* v = minmaxabs( 3.14, NaN );\n* // returns [ NaN, NaN ]\n*\n* v = minmaxabs( +0.0, -0.0 );\n* // returns [ 0.0, 0.0 ]\n*\n* v = minmaxabs( 3.14 );\n* // returns [ 3.14, 3.14 ]\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport assign from './assign.js';\nimport minmaxabs from './main.js';\n\n\n// MAIN //\n\nsetReadOnly( minmaxabs, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default minmaxabs;\n"],"names":["minmaxabs","x","y","out","stride","offset","ax","ay","isnan","NaN","abs","compute","setReadOnly","assign"],"mappings":";;mTA8DA,SAASA,EAAWC,EAAGC,EAAGC,EAAKC,EAAQC,GACtC,IAAIC,EACAC,EAEJ,OAAKC,EAAOP,IAAOO,EAAON,IACzBC,EAAKE,GAAWI,IAChBN,EAAKE,EAASD,GAAWK,IAClBN,IAERG,EAAKI,EAAKT,KACVM,EAAKG,EAAKR,KAETC,EAAKE,GAAWC,EAChBH,EAAKE,EAASD,GAAWG,EAClBJ,IAERA,EAAKE,GAAWE,EAChBJ,EAAKE,EAASD,GAAWE,EAClBH,EACR,CCnCA,SAASH,EAAWC,EAAGC,GACtB,OAAOS,EAASV,EAAGC,EAAG,CAAE,EAAK,GAAO,EAAG,EACxC,CCKAU,EAAAZ,EAAA,SAAAa"}